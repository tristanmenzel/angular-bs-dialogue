{"version":3,"sources":["bs-dialogue.js","bs-dialogue-views.js"],"names":["Dialogue","dialogueDefaults","$modal","$sce","Options","userOptions","o","this","primaryButtonCss","buttonCss","negativeButtonCss","title","text","buttons","confirmMode","getConfirmAffirmative","getConfirmNegative","modalOptions","templateUrl","controller","alert","options","mo","angular","copy","uo","resolve","trustAsHtml","prompt","css","open","result","confirm","value","custom","DialogueController","$scope","$modalInstance","userInput","buttonClicked","button","close","cancel","dismiss","module","service","constant","$inject","e","run","$templateCache","put"],"mappings":"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","file":"bs-dialogue.min.js","sourcesContent":["(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('bsDialogue', [])\r\n        .service('dialogue', Dialogue)\r\n        .constant('dialogueDefaults', {\r\n            primaryButtonCss: 'btn-primary',\r\n            buttonCss: 'btn-default',\r\n            negativeButtonCss: 'btn-danger'\r\n        })\r\n        .controller(\"dialogueCtrl\", DialogueController);\r\n    function Dialogue(dialogueDefaults, $modal,$sce) {\r\n        var modalOptions = {\r\n            templateUrl: 'dialogue.html',\r\n            controller: 'dialogueCtrl'\r\n        };\r\n        this.alert = function (text, options) {\r\n            var mo = angular.copy(modalOptions),\r\n                uo = new Options(options);\r\n\r\n            mo.resolve = {\r\n                title: function () {\r\n                    return uo.title;\r\n                },\r\n                text: function () {\r\n                    return $sce.trustAsHtml(text);\r\n                },\r\n                prompt: function () {\r\n                    return false;\r\n                },\r\n                buttons: function () {\r\n                    return [\r\n                        {\r\n                            text: \"Ok\",\r\n                            css: uo.primaryButtonCss\r\n                        }\r\n                    ];\r\n                }\r\n            };\r\n            return $modal.open(mo).result;\r\n\r\n        };\r\n        this.confirm = function (text, options) {\r\n            var mo = angular.copy(modalOptions),\r\n                uo = new Options(options);\r\n\r\n            mo.resolve = {\r\n                title: function () {\r\n                    return uo.title;\r\n                },\r\n                text: function () {\r\n                    return $sce.trustAsHtml(text);\r\n                },\r\n                prompt: function () {\r\n                    return false;\r\n                },\r\n                buttons: function () {\r\n                    return [\r\n                        {\r\n                            text: uo.getConfirmAffirmative(),\r\n                            css: uo.primaryButtonCss,\r\n                            value: true\r\n                        },\r\n                        {\r\n                            text: uo.getConfirmNegative(),\r\n                            css: uo.buttonCss,\r\n                            value: false\r\n                        }\r\n                    ];\r\n                }\r\n            };\r\n            return $modal.open(mo).result;\r\n        };\r\n        this.prompt = function (text, options) {\r\n            var mo = angular.copy(modalOptions),\r\n                uo = new Options(options);\r\n\r\n            mo.resolve = {\r\n                title: function () {\r\n                    return uo.title;\r\n                },\r\n                text: function () {\r\n                    return $sce.trustAsHtml(text);\r\n                },\r\n                prompt: function () {\r\n                    return true;\r\n                },\r\n                buttons: function () {\r\n                    return [\r\n                        {\r\n                            text: \"Ok\",\r\n                            css: uo.primaryButtonCss,\r\n                            value: true\r\n                        }\r\n                    ];\r\n                }\r\n            };\r\n            return $modal.open(mo).result;\r\n        };\r\n        this.custom = function (options) {\r\n            var mo = angular.copy(modalOptions),\r\n                uo = new Options(options);\r\n\r\n            mo.resolve = {\r\n                title: function () {\r\n                    return uo.title;\r\n                },\r\n                text: function () {\r\n                    return $sce.trustAsHtml(uo.text);\r\n                },\r\n                prompt: function () {\r\n                    return false;\r\n                },\r\n                buttons: function () {\r\n                    return uo.buttons;\r\n                }\r\n            };\r\n            return $modal.open(mo).result;\r\n        };\r\n\r\n        function Options(userOptions) {\r\n            var o = userOptions || {};\r\n\r\n            this.primaryButtonCss = o.primaryButtonCss || dialogueDefaults.primaryButtonCss;\r\n            this.buttonCss = o.buttonCss || dialogueDefaults.buttonCss;\r\n            this.negativeButtonCss = o.negativeButtonCss || dialogueDefaults.negativeButtonCss;\r\n\r\n            this.title = o.title || '';\r\n            this.text = o.text ||'';\r\n            this.buttons = o.buttons || [];\r\n\r\n            this.confirmMode = o.confirmMode || \"okCancel\";\r\n\r\n            this.getConfirmAffirmative = function () {\r\n                switch (this.confirmMode) {\r\n                    case \"yesNo\":\r\n                        return \"Yes\";\r\n                    default:\r\n                        return \"Ok\";\r\n                }\r\n            };\r\n\r\n            this.getConfirmNegative = function () {\r\n                switch (this.confirmMode) {\r\n                    case \"yesNo\":\r\n                        return \"No\";\r\n                    default:\r\n                        return \"Cancel\";\r\n                }\r\n            };\r\n        }\r\n    }\r\n    Dialogue.$inject = [\"dialogueDefaults\", \"$modal\", \"$sce\"];\r\n\r\n    function DialogueController($scope, $modalInstance, title, text, buttons, prompt) {\r\n        $scope.title = title;\r\n        $scope.buttons = buttons;\r\n        $scope.text = text;\r\n        $scope.prompt = prompt;\r\n        $scope.userInput = \"\";\r\n        $scope.buttonClicked = function (button) {\r\n            if (prompt) {\r\n                $modalInstance.close($scope.userInput);\r\n            } else {\r\n                $modalInstance.close(button.value);\r\n            }\r\n        };\r\n\r\n        $scope.cancel = function () {\r\n            $modalInstance.dismiss('cancel');\r\n        };\r\n    }\r\n    DialogueController.$inject = [\"$scope\", \"$modalInstance\", \"title\", \"text\", \"buttons\", \"prompt\"];\r\n})();","(function(module) {\ntry {\n  module = angular.module('bsDialogue');\n} catch (e) {\n  module = angular.module('bsDialogue', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('dialogue.html',\n    '<div class=\"modal-header\" ng-show=\"title.length\">\\n' +\n    '    <h3 class=\"modal-title\">{{title}}</h3>\\n' +\n    '</div>\\n' +\n    '<div class=\"modal-body\">\\n' +\n    '    <p ng-bind-html=\"text\"></p>\\n' +\n    '    <input type=\"text\" ng-show=\"prompt\" ng-model=\"userInput\"/>\\n' +\n    '</div>\\n' +\n    '<div class=\"modal-footer\">\\n' +\n    '    <button ng-repeat=\"button in buttons\" class=\"btn\" ng-class=\"[button.css]\" ng-click=\"buttonClicked(button)\">{{button.text}}</button>\\n' +\n    '</div>');\n}]);\n})();\n"],"sourceRoot":"/source/"}