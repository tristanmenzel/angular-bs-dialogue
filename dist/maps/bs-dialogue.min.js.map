{"version":3,"sources":["bs-dialogue.js","bs-dialogue-views.js"],"names":["DialogueController","$modalInstance","title","text","buttons","prompt","templateUrl","this","userInput","buttonClicked","button","close","value","cancel","dismiss","DialogueFactory","dialogueDefaults","$modal","$sce","Dialogue","options","mo","angular","copy","modalOptions","uo","Options","resolve","trustAsHtml","getButtons","open","result","userOptions","o","primaryButtonCss","buttonCss","negativeButtonCss","confirmMode","getConfirmAffirmative","getConfirmNegative","getConfirmButtons","css","getAlertButtons","getPromptButtons","controller","alert","confirm","custom","module","constant","factory","$inject","e","run","$templateCache","put"],"mappings":"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","file":"bs-dialogue.min.js","sourcesContent":["(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('bsDialogue', ['ui.bootstrap'])\r\n        .constant('dialogueDefaults', {\r\n            primaryButtonCss: 'btn-primary',\r\n            buttonCss: 'btn-default',\r\n            negativeButtonCss: 'btn-danger'\r\n        })\r\n        .factory('dialogue', DialogueFactory)\r\n        .controller('DialogueController', DialogueController);\r\n\r\n    function DialogueController($modalInstance, title, text, buttons, prompt, templateUrl) {\r\n        this.title = title;\r\n        this.buttons = buttons;\r\n        this.text = text;\r\n        this.prompt = prompt;\r\n        this.userInput = \"\";\r\n        this.templateUrl = templateUrl;\r\n        this.buttonClicked = function (button) {\r\n            if (prompt) {\r\n                $modalInstance.close(this.userInput);\r\n            } else {\r\n                $modalInstance.close(button.value);\r\n            }\r\n        };\r\n\r\n        this.cancel = function () {\r\n            $modalInstance.dismiss('cancel');\r\n        };\r\n    }\r\n    DialogueController.$inject = [\"$modalInstance\", \"title\", \"text\", \"buttons\", \"prompt\", \"templateUrl\"];\r\n\r\n    function DialogueFactory(dialogueDefaults, $modal, $sce) {\r\n\r\n\r\n        var modalOptions = {\r\n            templateUrl: 'dialogue.html',\r\n            controller: 'DialogueController as vm'\r\n        };\r\n\r\n\r\n        function Dialogue(options) {\r\n            var mo = angular.copy(modalOptions),\r\n                uo = new Options(options);\r\n\r\n            mo.resolve = {\r\n                title: function () {\r\n                    return uo.title;\r\n                },\r\n                templateUrl: function () {\r\n                    return uo.templateUrl;\r\n                },\r\n                text: function () {\r\n                    return $sce.trustAsHtml(uo.text);\r\n                },\r\n                prompt: function () {\r\n                    return uo.prompt;\r\n                },\r\n                buttons: function () {\r\n                    return uo.getButtons();\r\n                }\r\n            };\r\n            return $modal.open(mo).result;\r\n        }\r\n\r\n        Dialogue.alert = function (text, options) {\r\n            var o = options || {};\r\n            o.text = text;\r\n            o.buttons = \"alert\";\r\n            return this(o);\r\n        };\r\n        Dialogue.confirm = function (text, options) {\r\n            var o = options || {};\r\n            o.text = text;\r\n            o.buttons = \"confirm\";\r\n            return this(o);\r\n        };\r\n        Dialogue.prompt = function (text, options) {\r\n            var o = options || {};\r\n            o.text = text;\r\n            o.buttons = \"prompt\";\r\n            o.prompt = true;\r\n            return this(o);\r\n        };\r\n        Dialogue.custom = function (options) {\r\n            return this(options);\r\n        };\r\n\r\n        function Options(userOptions) {\r\n            var o = userOptions || {};\r\n\r\n            this.primaryButtonCss = o.primaryButtonCss || dialogueDefaults.primaryButtonCss;\r\n            this.buttonCss = o.buttonCss || dialogueDefaults.buttonCss;\r\n            this.negativeButtonCss = o.negativeButtonCss || dialogueDefaults.negativeButtonCss;\r\n\r\n            this.title = o.title || '';\r\n            this.text = o.text || '';\r\n            this.buttons = o.buttons || [];\r\n            this.templateUrl = o.templateUrl;\r\n            this.prompt = o.prompt === true;\r\n\r\n            this.confirmMode = o.confirmMode || \"okCancel\";\r\n\r\n            this.getConfirmAffirmative = function () {\r\n                switch (this.confirmMode) {\r\n                    case \"yesNo\":\r\n                        return \"Yes\";\r\n                    default:\r\n                        return \"Ok\";\r\n                }\r\n            };\r\n\r\n            this.getConfirmNegative = function () {\r\n                switch (this.confirmMode) {\r\n                    case \"yesNo\":\r\n                        return \"No\";\r\n                    default:\r\n                        return \"Cancel\";\r\n                }\r\n            };\r\n\r\n            this.getConfirmButtons = function () {\r\n                return [\r\n                    {\r\n                        text: this.getConfirmAffirmative(),\r\n                        css: this.primaryButtonCss,\r\n                        value: true\r\n                    },\r\n                    {\r\n                        text: this.getConfirmNegative(),\r\n                        css: this.buttonCss,\r\n                        value: false\r\n                    }\r\n                ];\r\n            };\r\n            this.getAlertButtons = function () {\r\n                return [\r\n                    {\r\n                        text: \"Ok\",\r\n                        css: this.primaryButtonCss\r\n                    }\r\n                ];\r\n            };\r\n            this.getPromptButtons = function () {\r\n                return [\r\n                    {\r\n                        text: \"Ok\",\r\n                        css: this.primaryButtonCss,\r\n                        value: true\r\n                    }\r\n                ];\r\n            };\r\n\r\n            this.getButtons = function () {\r\n                switch (this.buttons) {\r\n                    case \"confirm\":\r\n                        return this.getConfirmButtons();\r\n                    case \"alert\":\r\n                        return this.getAlertButtons();\r\n                    case \"prompt\":\r\n                        return this.getPromptButtons();\r\n                    default:\r\n                        return this.buttons;\r\n\r\n                }\r\n            };\r\n\r\n        }\r\n\r\n        return Dialogue;\r\n    }\r\n    DialogueFactory.$inject = [\"dialogueDefaults\", \"$modal\", \"$sce\"];\r\n\r\n\r\n})();","(function(module) {\ntry {\n  module = angular.module('bsDialogue');\n} catch (e) {\n  module = angular.module('bsDialogue', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('dialogue.html',\n    '<div class=\"modal-header\" ng-show=\"vm.title.length\">\\n' +\n    '    <h3 class=\"modal-title\">{{vm.title}}</h3>\\n' +\n    '</div>\\n' +\n    '<div class=\"modal-body\">\\n' +\n    '    <div ng-if=\"vm.templateUrl\" ng-include=\"vm.templateUrl\"></div>\\n' +\n    '    <p ng-bind-html=\"vm.text\" ng-if=\"!vm.templateUrl\"></p>\\n' +\n    '    <input type=\"text\" ng-show=\"vm.prompt\" ng-model=\"vm.userInput\"/>\\n' +\n    '</div>\\n' +\n    '<div class=\"modal-footer\">\\n' +\n    '    <button ng-repeat=\"button in vm.buttons\" class=\"btn\" ng-class=\"[button.css]\" ng-click=\"vm.buttonClicked(button)\">\\n' +\n    '        {{button.text}}\\n' +\n    '    </button>\\n' +\n    '</div>');\n}]);\n})();\n"],"sourceRoot":"/source/"}