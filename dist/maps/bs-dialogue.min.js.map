{"version":3,"sources":["bs-dialogue.js","bs-dialogue-views.js"],"names":["Dialogue","dialogueDefaults","$modal","$sce","Options","userOptions","o","this","primaryButtonCss","buttonCss","negativeButtonCss","title","text","buttons","templateUrl","prompt","confirmMode","getConfirmAffirmative","getConfirmNegative","getConfirmButtons","css","value","getAlertButtons","getPromptButtons","getButtons","modalOptions","controller","alert","options","custom","confirm","mo","angular","copy","uo","resolve","trustAsHtml","open","result","DialogueController","$scope","$modalInstance","userInput","buttonClicked","button","close","cancel","dismiss","module","service","constant","$inject","e","run","$templateCache","put"],"mappings":"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","file":"bs-dialogue.min.js","sourcesContent":["(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('bsDialogue', [])\r\n        .service('dialogue', Dialogue)\r\n        .constant('dialogueDefaults', {\r\n            primaryButtonCss: 'btn-primary',\r\n            buttonCss: 'btn-default',\r\n            negativeButtonCss: 'btn-danger'\r\n        })\r\n        .controller(\"dialogueCtrl\", DialogueController);\r\n    function Dialogue(dialogueDefaults, $modal, $sce) {\r\n        var modalOptions = {\r\n            templateUrl: 'dialogue.html',\r\n            controller: 'dialogueCtrl as vm'\r\n        };\r\n        this.alert = function (text, options) {\r\n            var o = options || {};\r\n            o.text = text;\r\n            o.buttons = \"alert\";\r\n            return this.custom(o);\r\n        };\r\n        this.confirm = function (text, options) {\r\n            var o = options || {};\r\n            o.text = text;\r\n            o.buttons = \"confirm\";\r\n            return this.custom(o);\r\n        };\r\n        this.prompt = function (text, options) {\r\n            var o = options || {};\r\n            o.text = text;\r\n            o.buttons = \"prompt\";\r\n            o.prompt = true;\r\n            return this.custom(o);\r\n        };\r\n        this.custom = function (options) {\r\n            var mo = angular.copy(modalOptions),\r\n                uo = new Options(options);\r\n\r\n            mo.resolve = {\r\n                title: function () {\r\n                    return uo.title;\r\n                },\r\n                templateUrl: function () {\r\n                    return uo.templateUrl;\r\n                },\r\n                text: function () {\r\n                    return $sce.trustAsHtml(uo.text);\r\n                },\r\n                prompt: function () {\r\n                    return uo.prompt;\r\n                },\r\n                buttons: function () {\r\n                    return uo.getButtons();\r\n                }\r\n            };\r\n            return $modal.open(mo).result;\r\n        };\r\n\r\n        function Options(userOptions) {\r\n            var o = userOptions || {};\r\n\r\n            this.primaryButtonCss = o.primaryButtonCss || dialogueDefaults.primaryButtonCss;\r\n            this.buttonCss = o.buttonCss || dialogueDefaults.buttonCss;\r\n            this.negativeButtonCss = o.negativeButtonCss || dialogueDefaults.negativeButtonCss;\r\n\r\n            this.title = o.title || '';\r\n            this.text = o.text || '';\r\n            this.buttons = o.buttons || [];\r\n            this.templateUrl = o.templateUrl;\r\n            this.prompt = o.prompt === true;\r\n\r\n            this.confirmMode = o.confirmMode || \"okCancel\";\r\n\r\n            this.getConfirmAffirmative = function () {\r\n                switch (this.confirmMode) {\r\n                    case \"yesNo\":\r\n                        return \"Yes\";\r\n                    default:\r\n                        return \"Ok\";\r\n                }\r\n            };\r\n\r\n            this.getConfirmNegative = function () {\r\n                switch (this.confirmMode) {\r\n                    case \"yesNo\":\r\n                        return \"No\";\r\n                    default:\r\n                        return \"Cancel\";\r\n                }\r\n            };\r\n\r\n            this.getConfirmButtons = function () {\r\n                return [\r\n                    {\r\n                        text: this.getConfirmAffirmative(),\r\n                        css: this.primaryButtonCss,\r\n                        value: true\r\n                    },\r\n                    {\r\n                        text: this.getConfirmNegative(),\r\n                        css: this.buttonCss,\r\n                        value: false\r\n                    }\r\n                ];\r\n            };\r\n            this.getAlertButtons = function () {\r\n                return [\r\n                    {\r\n                        text: \"Ok\",\r\n                        css: this.primaryButtonCss\r\n                    }\r\n                ];\r\n            };\r\n            this.getPromptButtons = function () {\r\n                return [\r\n                    {\r\n                        text: \"Ok\",\r\n                        css: this.primaryButtonCss,\r\n                        value: true\r\n                    }\r\n                ];\r\n            };\r\n\r\n            this.getButtons = function(){\r\n                switch(this.buttons){\r\n                    case \"confirm\":\r\n                        return this.getConfirmButtons();\r\n                    case \"alert\":\r\n                        return this.getAlertButtons();\r\n                    case \"prompt\":\r\n                        return this.getPromptButtons();\r\n                    default:\r\n                        return this.buttons;\r\n\r\n                }\r\n            };\r\n        }\r\n    }\r\n    Dialogue.$inject = [\"dialogueDefaults\", \"$modal\", \"$sce\"];\r\n\r\n    function DialogueController($scope, $modalInstance, title, text, buttons, prompt, templateUrl) {\r\n        this.title = title;\r\n        this.buttons = buttons;\r\n        this.text = text;\r\n        this.prompt = prompt;\r\n        this.userInput = \"\";\r\n        this.templateUrl = templateUrl;\r\n        this.buttonClicked = function (button) {\r\n            if (prompt) {\r\n                $modalInstance.close(this.userInput);\r\n            } else {\r\n                $modalInstance.close(button.value);\r\n            }\r\n        };\r\n\r\n        this.cancel = function () {\r\n            $modalInstance.dismiss('cancel');\r\n        };\r\n    }\r\n    DialogueController.$inject = [\"$scope\", \"$modalInstance\", \"title\", \"text\", \"buttons\", \"prompt\", \"templateUrl\"];\r\n})();","(function(module) {\ntry {\n  module = angular.module('bsDialogue');\n} catch (e) {\n  module = angular.module('bsDialogue', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('dialogue.html',\n    '<div class=\"modal-header\" ng-show=\"vm.title.length\">\\n' +\n    '    <h3 class=\"modal-title\">{{vm.title}}</h3>\\n' +\n    '</div>\\n' +\n    '<div class=\"modal-body\">\\n' +\n    '    <div ng-if=\"vm.templateUrl\" ng-include=\"vm.templateUrl\"></div>\\n' +\n    '    <p ng-bind-html=\"vm.text\" ng-if=\"!vm.templateUrl\"></p>\\n' +\n    '    <input type=\"text\" ng-show=\"vm.prompt\" ng-model=\"vm.userInput\"/>\\n' +\n    '</div>\\n' +\n    '<div class=\"modal-footer\">\\n' +\n    '    <button ng-repeat=\"button in vm.buttons\" class=\"btn\" ng-class=\"[button.css]\" ng-click=\"vm.buttonClicked(button)\">\\n' +\n    '        {{button.text}}\\n' +\n    '    </button>\\n' +\n    '</div>');\n}]);\n})();\n"],"sourceRoot":"/source/"}