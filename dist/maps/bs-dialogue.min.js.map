{"version":3,"sources":["bs-dialogue.js","bs-dialogue.min.js","bs-dialogue-views.js"],"names":["DialogueController","$modalInstance","title","text","buttons","prompt","templateUrl","template","model","$scope","this","userInput","buttonClicked","button","close","value","cancel","dismiss","DialogueTemplate","$compile","restrict","link","scope","element","templateHtml","vm","html","contents","DialogueFactory","dialogueDefaults","$modal","$sce","Dialogue","options","mo","angular","copy","modalOptions","uo","Options","resolve","trustAsHtml","getButtons","open","result","userOptions","o","primaryButtonCss","buttonCss","negativeButtonCss","confirmMode","getConfirmAffirmative","getConfirmNegative","getConfirmButtons","css","getAlertButtons","getPromptButtons","controller","backdrop","alert","confirm","custom","module","constant","factory","directive","$inject","e","run","$templateCache","put"],"mappings":"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","file":"bs-dialogue.min.js","sourcesContent":["(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('bsDialogue', ['ui.bootstrap'])\r\n        .constant('dialogueDefaults', {\r\n            primaryButtonCss: 'btn-primary',\r\n            buttonCss: 'btn-default',\r\n            negativeButtonCss: 'btn-danger'\r\n        })\r\n        .factory('dialogue', DialogueFactory)\r\n        .controller('DialogueController', DialogueController)\r\n        .directive('dialogueTemplate', DialogueTemplate);\r\n\r\n    function DialogueController($modalInstance, title, text, buttons, prompt, templateUrl, template, model, $scope) {\r\n        this.title = title;\r\n        this.buttons = buttons;\r\n        this.text = text;\r\n        this.prompt = prompt;\r\n        this.userInput = \"\";\r\n        this.templateUrl = templateUrl;\r\n        this.template = template;\r\n        $scope.model = model;\r\n        this.buttonClicked = function (button) {\r\n            if (prompt) {\r\n                $modalInstance.close(this.userInput);\r\n            } else {\r\n                $modalInstance.close(button.value);\r\n            }\r\n        };\r\n\r\n        this.cancel = function () {\r\n            $modalInstance.dismiss('cancel');\r\n        };\r\n    }\r\n\r\n    function DialogueTemplate($compile) {\r\n        return {\r\n            restrict: 'A',\r\n            link: function (scope, element) {\r\n                var templateHtml = scope.vm.template;\r\n                if (!templateHtml)\r\n                    return;\r\n                element.html(templateHtml);\r\n                $compile(element.contents())(scope);\r\n            }\r\n        };\r\n    }\r\n\r\n    function DialogueFactory(dialogueDefaults, $modal, $sce) {\r\n\r\n\r\n        var modalOptions = {\r\n            templateUrl: 'dialogue.html',\r\n            controller: 'DialogueController as vm',\r\n            backdrop: 'static'\r\n        };\r\n\r\n\r\n        function Dialogue(options) {\r\n            var mo = angular.copy(modalOptions),\r\n                uo = new Options(options);\r\n\r\n            mo.resolve = {\r\n                title: function () {\r\n                    return uo.title;\r\n                },\r\n                templateUrl: function () {\r\n                    return uo.templateUrl;\r\n                },\r\n                text: function () {\r\n                    return $sce.trustAsHtml(uo.text);\r\n                },\r\n                prompt: function () {\r\n                    return uo.prompt;\r\n                },\r\n                buttons: function () {\r\n                    return uo.getButtons();\r\n                },\r\n                template: function () {\r\n                    return uo.template;\r\n                },\r\n                model: function(){\r\n                    return uo.model;\r\n                }\r\n            };\r\n            return $modal.open(mo).result;\r\n        }\r\n\r\n        Dialogue.alert = function (text, options) {\r\n            var o = options || {};\r\n            o.text = text;\r\n            o.buttons = \"alert\";\r\n            return this(o);\r\n        };\r\n        Dialogue.confirm = function (text, options) {\r\n            var o = options || {};\r\n            o.text = text;\r\n            o.buttons = \"confirm\";\r\n            return this(o);\r\n        };\r\n        Dialogue.prompt = function (text, options) {\r\n            var o = options || {};\r\n            o.text = text;\r\n            o.buttons = \"prompt\";\r\n            o.prompt = true;\r\n            return this(o);\r\n        };\r\n        Dialogue.custom = function (options) {\r\n            return this(options);\r\n        };\r\n\r\n        function Options(userOptions) {\r\n            var o = userOptions || {};\r\n\r\n            this.primaryButtonCss = o.primaryButtonCss || dialogueDefaults.primaryButtonCss;\r\n            this.buttonCss = o.buttonCss || dialogueDefaults.buttonCss;\r\n            this.negativeButtonCss = o.negativeButtonCss || dialogueDefaults.negativeButtonCss;\r\n\r\n            this.title = o.title || '';\r\n            this.text = o.text || '';\r\n            this.buttons = o.buttons || [];\r\n            this.templateUrl = o.templateUrl;\r\n            this.prompt = o.prompt === true;\r\n            this.template = o.template;\r\n            this.model = o.model;\r\n            this.confirmMode = o.confirmMode || \"okCancel\";\r\n\r\n            this.getConfirmAffirmative = function () {\r\n                switch (this.confirmMode) {\r\n                    case \"yesNo\":\r\n                        return \"Yes\";\r\n                    default:\r\n                        return \"Ok\";\r\n                }\r\n            };\r\n\r\n            this.getConfirmNegative = function () {\r\n                switch (this.confirmMode) {\r\n                    case \"yesNo\":\r\n                        return \"No\";\r\n                    default:\r\n                        return \"Cancel\";\r\n                }\r\n            };\r\n\r\n            this.getConfirmButtons = function () {\r\n                return [\r\n                    {\r\n                        text: this.getConfirmAffirmative(),\r\n                        css: this.primaryButtonCss,\r\n                        value: true\r\n                    },\r\n                    {\r\n                        text: this.getConfirmNegative(),\r\n                        css: this.buttonCss,\r\n                        value: false\r\n                    }\r\n                ];\r\n            };\r\n            this.getAlertButtons = function () {\r\n                return [\r\n                    {\r\n                        text: \"Ok\",\r\n                        css: this.primaryButtonCss\r\n                    }\r\n                ];\r\n            };\r\n            this.getPromptButtons = function () {\r\n                return [\r\n                    {\r\n                        text: \"Ok\",\r\n                        css: this.primaryButtonCss,\r\n                        value: true\r\n                    }\r\n                ];\r\n            };\r\n\r\n            this.getButtons = function () {\r\n                switch (this.buttons) {\r\n                    case \"confirm\":\r\n                        return this.getConfirmButtons();\r\n                    case \"alert\":\r\n                        return this.getAlertButtons();\r\n                    case \"prompt\":\r\n                        return this.getPromptButtons();\r\n                    default:\r\n                        return this.buttons;\r\n\r\n                }\r\n            };\r\n\r\n        }\r\n\r\n        return Dialogue;\r\n    }\r\n\r\n\r\n})();",null,"(function(module) {\ntry {\n  module = angular.module('bsDialogue');\n} catch (e) {\n  module = angular.module('bsDialogue', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('dialogue.html',\n    '<div class=\"modal-header\" ng-show=\"vm.title.length\"><h3 class=\"modal-title\">{{vm.title}}</h3></div><div class=\"modal-body\"><div dialogue-template=\"\"></div><div ng-if=\"vm.templateUrl\" ng-include=\"vm.templateUrl\"></div><p ng-bind-html=\"vm.text\" ng-if=\"!vm.templateUrl\"></p><input type=\"text\" ng-show=\"vm.prompt\" ng-model=\"vm.userInput\"></div><div class=\"modal-footer\"><button ng-repeat=\"button in vm.buttons\" class=\"btn\" ng-class=\"[button.css]\" ng-click=\"vm.buttonClicked(button)\">{{button.text}}</button></div>');\n}]);\n})();\n"],"sourceRoot":"/source/"}