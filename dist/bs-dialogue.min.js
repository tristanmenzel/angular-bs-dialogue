!function(){"use strict";function t(t,n,e){function s(n){var e=n||{};this.primaryButtonCss=e.primaryButtonCss||t.primaryButtonCss,this.buttonCss=e.buttonCss||t.buttonCss,this.negativeButtonCss=e.negativeButtonCss||t.negativeButtonCss,this.title=e.title||"",this.text=e.text||"",this.buttons=e.buttons||[],this.templateUrl=e.templateUrl,this.prompt=e.prompt===!0,this.confirmMode=e.confirmMode||"okCancel",this.getConfirmAffirmative=function(){switch(this.confirmMode){case"yesNo":return"Yes";default:return"Ok"}},this.getConfirmNegative=function(){switch(this.confirmMode){case"yesNo":return"No";default:return"Cancel"}},this.getConfirmButtons=function(){return[{text:this.getConfirmAffirmative(),css:this.primaryButtonCss,value:!0},{text:this.getConfirmNegative(),css:this.buttonCss,value:!1}]},this.getAlertButtons=function(){return[{text:"Ok",css:this.primaryButtonCss}]},this.getPromptButtons=function(){return[{text:"Ok",css:this.primaryButtonCss,value:!0}]},this.getButtons=function(){switch(this.buttons){case"confirm":return this.getConfirmButtons();case"alert":return this.getAlertButtons();case"prompt":return this.getPromptButtons();default:return this.buttons}}}var i={templateUrl:"dialogue.html",controller:"dialogueCtrl as vm"};this.alert=function(t,n){var e=n||{};return e.text=t,e.buttons="alert",this.custom(e)},this.confirm=function(t,n){var e=n||{};return e.text=t,e.buttons="confirm",this.custom(e)},this.prompt=function(t,n){var e=n||{};return e.text=t,e.buttons="prompt",e.prompt=!0,this.custom(e)},this.custom=function(t){var o=angular.copy(i),u=new s(t);return o.resolve={title:function(){return u.title},templateUrl:function(){return u.templateUrl},text:function(){return e.trustAsHtml(u.text)},prompt:function(){return u.prompt},buttons:function(){return u.getButtons()}},n.open(o).result}}function n(t,n,e,s,i,o,u){this.title=e,this.buttons=i,this.text=s,this.prompt=o,this.userInput="",this.templateUrl=u,this.buttonClicked=function(t){n.close(o?this.userInput:t.value)},this.cancel=function(){n.dismiss("cancel")}}angular.module("bsDialogue",[]).service("dialogue",t).constant("dialogueDefaults",{primaryButtonCss:"btn-primary",buttonCss:"btn-default",negativeButtonCss:"btn-danger"}).controller("dialogueCtrl",n),t.$inject=["dialogueDefaults","$modal","$sce"],n.$inject=["$scope","$modalInstance","title","text","buttons","prompt","templateUrl"]}(),function(t){try{t=angular.module("bsDialogue")}catch(n){t=angular.module("bsDialogue",[])}t.run(["$templateCache",function(t){t.put("dialogue.html",'<div class="modal-header" ng-show="vm.title.length">\n    <h3 class="modal-title">{{vm.title}}</h3>\n</div>\n<div class="modal-body">\n    <div ng-if="vm.templateUrl" ng-include="vm.templateUrl"></div>\n    <p ng-bind-html="vm.text" ng-if="!vm.templateUrl"></p>\n    <input type="text" ng-show="vm.prompt" ng-model="vm.userInput"/>\n</div>\n<div class="modal-footer">\n    <button ng-repeat="button in vm.buttons" class="btn" ng-class="[button.css]" ng-click="vm.buttonClicked(button)">\n        {{button.text}}\n    </button>\n</div>')}])}();
//# sourceMappingURL=maps/bs-dialogue.min.js.map